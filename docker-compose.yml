# Версия схемы, которую мы используем.
version: '3'

#список сервисов
services:

  #сервис (даем любое угодное название)
  nginx:

    #образ контейнера
    image: nginx:latest

    #перечисляем директории, которые хотим пробросить в контейнер (система:контейнер)
    volumes:
      - ../:/var/www/ #все файлы из корня проекта будут помещены в папку /var/www/ на сервере
      - ./nginx/conf.d/:/etc/nginx/conf.d/ #заменяем стандартный конфиг, на наш - кастомный

    ports:
      - "8888:80"

    #контейнер nginx будет запущен, только при успешном старте контейнера php
    depends_on:
      - app
    container_name: project_nginx


  #сервис
  app:
    #указание на необходимость сборки из Dockerfile
    build:
      # Контекст для сборки образа,
      # в данном случае, текущая директория
      context: .
      # Путь к докер файлу из которого будет собран образ
      dockerfile: app/Dockerfile

    volumes:
      - ../:/var/www/ #для пхп также выдаем доступ к файловой системе проекта
    depends_on:
      - db
    container_name: project_app

  #сервис
  db:
    image: mysql:8.0
    # перезапускаем контейнер, если он падает: всегда
    restart: always
    # делаем "синзронизацию" табличек в локал папке /tmp/db, на случай проблем с контейнером
    volumes:
      - ../tmp/db:/var/lib/mysql
    #задаем значения переменным окружения
    environment:
      MYSQL_DATABASE: mainDB
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "9999:3306"
    #команда, которая будет выполнена при создании контейнера
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    container_name: project_db
